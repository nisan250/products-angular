{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/messages/message.component.ts","webpack:///./src/app/messages/message.module.ts","webpack:///./src/app/messages/message.service.ts","webpack:///./src/app/page-not-found.component.ts","webpack:///./src/app/products/index.ts","webpack:///./src/app/products/product-data.ts","webpack:///./src/app/products/product-detail.component.css","webpack:///./src/app/products/product-detail.component.html","webpack:///./src/app/products/product-detail.component.ts","webpack:///./src/app/products/product-edit.component.css","webpack:///./src/app/products/product-edit.component.html","webpack:///./src/app/products/product-edit.component.ts","webpack:///./src/app/products/product-edit.guard.ts","webpack:///./src/app/products/product-list.component.css","webpack:///./src/app/products/product-list.component.html","webpack:///./src/app/products/product-list.component.ts","webpack:///./src/app/products/product-resolver.service.ts","webpack:///./src/app/products/product-routing.module.ts","webpack:///./src/app/products/product.module.ts","webpack:///./src/app/products/product.service.ts","webpack:///./src/app/shared/generic-validator.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/app/shared/number.validator.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/star.component.css","webpack:///./src/app/shared/star.component.html","webpack:///./src/app/shared/star.component.ts","webpack:///./src/app/user/auth.service.ts","webpack:///./src/app/user/login.component.html","webpack:///./src/app/user/login.component.scss","webpack:///./src/app/user/login.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  // { path: '**', redirectTo: 'home', pathMatch: 'full' },\n  { path: '**',  component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,\n    // {enableTracing: true}\n  )],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"spinner-bg\\\" *ngIf=\\\"loading\\\">\\n    <span class=\\\"fa fa-spinner\\\"></span>\\n</div>\\n<div class=\\\"navbar navbar-expand-lg fixed-top navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\"  [routerLink]=\\\"['/']\\\" >{{title}}</a><!--[routerLinkActive]=\\\"['link-active']\\\"-->\\n\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"toggleNavbar()\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse xnavbar-nav xnav\\\" [ngClass]=\\\"{ 'show': navbarOpen }\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class='nav-item'><a class='nav-link' routerLinkActive='active'\\n        [routerLink]=\\\"['/home']\\\" (click)=\\\"toggleNavbar()\\\">Home</a>\\n      </li>\\n      <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\n        [routerLink]=\\\"['/products']\\\" (click)=\\\"toggleNavbar()\\\">Product List</a>\\n      </li>\\n      <li class='nav-item'><a class='nav-link' routerLinkActive='active'\\n        [routerLink]=\\\"['/products/0/edit']\\\" (click)=\\\"toggleNavbar()\\\">Add Product</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li class='nav-item' *ngIf=\\\"authService.isLoggedIn()\\\"><!-- class='nav-item'-->\\n          <a class='nav-link'>Welcome {{ authService.currentUser.userName }}</a><!--class='nav-link'-->\\n        </li>\\n        <li class='nav-item' *ngIf=\\\"!authService.isLoggedIn()\\\">\\n          <a class='nav-link' routerLinkActive='active' [routerLink]=\\\"['/login']\\\" (click)=\\\"toggleNavbar()\\\">Log In</a>\\n        </li>\\n        <li class='nav-item log-out-link' *ngIf=\\\"authService.isLoggedIn()\\\">\\n          <a class='nav-link' (click)=\\\"logOut()\\\">Log Out</a>\\n        </li>\\n      </ul>\\n  </div>\\n</div>\\n\\n<div class='container content-with-fixed-top'>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \".nav-link {\\n  font-size: 14px; }\\n\\n.navbar-brand {\\n  font-size: 21px; }\\n\\n.content-with-fixed-top {\\n  padding-top: 90px; }\\n\\n.log-out-link {\\n  cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRDpcXGFwcHNcXG15LWFwcC9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFDRSxnQkFBZSxFQUNoQjs7QUFDRDtFQUNFLGtCQUFpQixFQUNsQjs7QUFDRDtFQUNFLGdCQUFlLEVBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi1saW5rIHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuLm5hdmJhci1icmFuZHtcclxuICBmb250LXNpemU6IDIxcHg7XHJcbn1cclxuLmNvbnRlbnQtd2l0aC1maXhlZC10b3Age1xyXG4gIHBhZGRpbmctdG9wOiA5MHB4O1xyXG59XHJcbi5sb2ctb3V0LWxpbmsge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuIl19 */\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './user/auth.service';\r\nimport { Router, Event, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\r\nimport { BrowserPlatformLocation } from '@angular/platform-browser/src/browser/location/browser_platform_location';\r\n\r\n@Component({\r\n  selector: 'wn-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Products-NG';\r\n  navbarOpen = false;\r\n  loading = true;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {\r\n    router.events.subscribe((routerEvent: Event) => {\r\n      this.handleRouterEvent(routerEvent);\r\n    });\r\n   }\r\n\r\n  handleRouterEvent(routerEvent: Event): void {\r\n    if (routerEvent instanceof NavigationStart) {\r\n      this.loading = true;\r\n    }\r\n\r\n    if (routerEvent instanceof NavigationEnd ||\r\n      routerEvent instanceof NavigationCancel ||\r\n      routerEvent instanceof NavigationError) {\r\n        this.loading = false;\r\n    }\r\n  }\r\n\r\n  toggleNavbar() {\r\n    this.navbarOpen = !this.navbarOpen;\r\n  }\r\n\r\n  logOut(): void {\r\n    this.authService.logout();\r\n    this.router.navigateByUrl('/home');\r\n    this.toggleNavbar();\r\n    // console.log('Log out');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Imports for loading & configuring the in-memory web api\r\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { ProductData } from './products/product-data';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PageNotFoundComponent } from './page-not-found.component';\r\n\r\n// Third Party\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\n\r\n// Feature Modules\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ProductModule } from './products/product.module';\r\nimport { UserModule } from './user/user.module';\r\nimport { MessageModule } from './messages/message.module';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    PageNotFoundComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    NgxLoadingModule.forRoot({}),\r\n    InMemoryWebApiModule.forRoot(ProductData, { delay: 1000 } ),\r\n    UserModule,\r\n    ProductModule,\r\n    MessageModule,\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"animatedroute2\\\">\\n    <!-- <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backDropBorderRadius: '14px'}\\\"></ngx-loading> -->\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          {{pageTitle}}\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"container-fluid\\\">\\n            <div class=\\\"text-center\\\">\\n              <img src=\\\"./assets/images/logo-cut.png\\\"\\n                   class=\\\"img-responsive center-block\\\"\\n                   style=\\\"padding-bottom:50px\\\" />\\n            </div>\\n\\n            <div class=\\\"text-center\\\">Developed by:</div>\\n            <div class=\\\"text-center\\\">\\n              <h3>Nisan Sabag</h3>\\n            </div>\\n\\n            <div class=\\\"text-center\\\">\\n              <a href=\\\"https://github.com/nisan250/\\\">www.github.com/nisan250/</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n</div>\\n\\n\"","module.exports = \".card {\\n  margin-top: 30px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9EOlxcYXBwc1xcbXktYXBwL3NyY1xcYXBwXFxob21lXFxob21lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWdCLEVBQ2pCIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gIG1hcmdpbi10b3A6IDMwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'wn-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public pageTitle = 'Welcome';\n  public loading = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    // this.loading = true;\n  }\n\n}\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { MessageService } from '../messages/message.service';\r\n\r\n@Component({\r\n    template: `\r\n        <div class=\"row\">\r\n            <h4 class=\"col-md-10\">Message Log</h4>\r\n            <span class=\"col-md-2\">\r\n                <a class=\"btn btn-default\"\r\n                    (click)=\"close()\">\r\n                    x\r\n                </a>\r\n            </span>\r\n        </div>\r\n        <div *ngFor=\"let message of messageService.messages; let i=index\">\r\n            <div *ngIf=\"i<10\" class=\"message-row\">\r\n                {{ message }}\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        '.message-row { margin-bottom: 10px }'\r\n    ]\r\n})\r\nexport class MessageComponent {\r\n\r\n    constructor(private messageService: MessageService,\r\n                private router: Router) { }\r\n\r\n    close(): void {\r\n        // Close the popup.\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { MessageComponent } from './message.component';\r\nimport { MessageService } from './message.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        MessageComponent\r\n    ],\r\n    providers: [\r\n        MessageService\r\n    ]\r\n})\r\nexport class MessageModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n    private messages: string[] = [];\r\n\r\n    addMessage(message: string): void {\r\n        const currentDate = new Date();\r\n        this.messages.unshift(message + ' at ' + currentDate.toLocaleString());\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n    template: `\n    <h1>sorry, that page doesn't exist!</h1>\n    `\n})\nexport class PageNotFoundComponent { }\n","export * from './product-list.component';\r\nexport * from './product-detail.component';\r\nexport * from './product-edit.component';\r\nexport * from './product-edit.guard';\r\nexport * from './product-resolver.service';\r\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\n// import { productsData } from './api/products.json';\r\nimport { Product } from './product';\r\n\r\nexport class ProductData implements InMemoryDbService {\r\n\r\n  createDb() {\r\n    const products: Product[] = [\r\n      {\r\n        'id': 1,\r\n        'productName': 'Xmas Hat',\r\n        'productCode': 'PIP-0001',\r\n        'releaseDate': '03/10/2018',\r\n        'description': 'Remix where white elements are white and not transparent so it can be used on transparent backgrounds',\r\n        'price': 10.22,\r\n        'starRating': 5.0,\r\n        'imageUrl': 'https://openclipart.org/download/311105/1543645324.svg',\r\n        'tags': ['hat', 'chrismas', 'red']\r\n      },\r\n      {\r\n        'id': 2,\r\n        'productName': 'LAMPADA AD OLIO',\r\n        'productCode': 'PIP-0002',\r\n        'releaseDate': '15/01/2018',\r\n        'description': 'Lampada ad olio',\r\n        'price': 11.22,\r\n        'starRating': 3.2,\r\n        'imageUrl': 'https://openclipart.org/download/311298/1544033187.svg'\r\n      },\r\n      {\r\n        'id': 5,\r\n        'productName': 'headphone',\r\n        'productCode': 'PIP-0003',\r\n        'releaseDate': '22/10/2018',\r\n        'description': 'A simple headphone.',\r\n        'price': 8.3,\r\n        'starRating': 4.3,\r\n        'imageUrl': 'https://openclipart.org/download/221493/Headphones-Icon.svg',\r\n        'tags': ['audio', 'music', 'hardware']\r\n      },\r\n      {\r\n        'id': 8,\r\n        'productName': 'Strawberry Plant',\r\n        'productCode': 'PIP-0004',\r\n        'releaseDate': '05/12/2018',\r\n        'description': 'A strawberry plant with flowers and fruits.',\r\n        'price': 8.30,\r\n        'starRating': 2.5,\r\n        'imageUrl': 'https://openclipart.org/download/217678/Strawberry-Plant.svg'\r\n      },\r\n      {\r\n        'id': 10,\r\n        'productName': 'Owl Clock',\r\n        'productCode': 'PIP-0005',\r\n        'releaseDate': '09/11/2018',\r\n        'description': 'cool owl clock ',\r\n        'price': 20.45,\r\n        'starRating': 3.7,\r\n        'imageUrl': 'https://openclipart.org/download/247152/OwlClock.svg'\r\n      }\r\n    ];\r\n    return { products };\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card animatedroute\\\">\\n  <div class=\\\"card-header\\\"\\n       *ngIf=\\\"product\\\">\\n    {{pageTitle + \\\": \\\" + product.productName}}\\n  </div>\\n\\n  <div class=\\\"card-body\\\"\\n       *ngIf=\\\"product\\\">\\n\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Name:</div>\\n          <div class=\\\"col-md-6\\\">{{product.productName}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Code:</div>\\n          <div class=\\\"col-md-6\\\">{{product.productCode}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Description:</div>\\n          <div class=\\\"col-md-6\\\">{{product.description}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Availability:</div>\\n          <div class=\\\"col-md-6\\\">{{product.releaseDate}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Price:</div>\\n          <div class=\\\"col-md-6\\\">{{product.price|currency:\\\"USD\\\":\\\"symbol\\\"}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">5 Star Rating:</div>\\n          <div class=\\\"col-md-6\\\">\\n            <wn-star [rating]=\\\"product.starRating\\\">\\n            </wn-star>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Tags:</div>\\n          <div class=\\\"col-md-6\\\">{{product.tags}}</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\"\\n           *ngIf=\\\"product.imageUrl\\\">\\n        <img class=\\\"center-block img-responsive\\\"\\n             [style.height.px]=\\\"150\\\"\\n             [style.margin.px]=\\\"2\\\"\\n             [src]=\\\"product.imageUrl\\\"\\n             [title]=\\\"product.productName\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <button class=\\\"btn btn-outline-secondary mr-3\\\"\\n                style=\\\"width:80px\\\"\\n                [routerLink]=\\\"['/products']\\\"\\n                [preserveQueryParams]=\\\"true\\\"><!--(click)=\\\"onBack()-->\\n          <i class=\\\"fa fa-chevron-left\\\"></i> Back\\n        </button>\\n        <button class=\\\"btn btn-outline-primary\\\"\\n                style=\\\"width:80px\\\"\\n                [routerLink]=\\\"['/products', product.id, 'edit']\\\"\\n                [preserveQueryParams]=\\\"true\\\">\\n          Edit\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"alert alert-danger\\\"\\n       *ngIf=\\\"errorMessage\\\">{{errorMessage}}\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Product } from './product';\r\n// import { ProductService } from './product.service';\r\n\r\n@Component({\r\n  templateUrl: './product-detail.component.html',\r\n  styleUrls: ['./product-detail.component.css']\r\n})\r\nexport class ProductDetailComponent implements OnInit {\r\n  pageTitle = 'Product Detail';\r\n  errorMessage = '';\r\n  product: Product | undefined;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // get data  from a resolve on the route\r\n    this.product = this.route.snapshot.data['product'];\r\n\r\n    /* without the resolver\r\n    const param = this.route.snapshot.paramMap.get('id');\r\n    if (param) {\r\n      const id = +param;\r\n      this.getProduct(id);\r\n    }\r\n    */\r\n  }\r\n\r\n  /* without the resolver\r\n    getProduct(id: number) {\r\n    this.productService.getProduct(id).subscribe(\r\n      product => this.product = product,\r\n      error => this.errorMessage = <any>error);\r\n  }\r\n  */\r\n\r\n  onBack(): void {\r\n    this.router.navigate(['/products']);\r\n  }\r\n\r\n}\r\n","module.exports = \"@media (max-width: 767px) {\\r\\n  .delete-button {\\r\\n    margin-top: 6px;\\r\\n  }\\r\\n  .add-tag-button{\\r\\n    margin-top: 26px;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdC1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRTtJQUNFLGdCQUFnQjtHQUNqQjtFQUNEO0lBQ0UsaUJBQWlCO0dBQ2xCO0NBQ0YiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9wcm9kdWN0LWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xyXG4gIC5kZWxldGUtYnV0dG9uIHtcclxuICAgIG1hcmdpbi10b3A6IDZweDtcclxuICB9XHJcbiAgLmFkZC10YWctYnV0dG9ue1xyXG4gICAgbWFyZ2luLXRvcDogMjZweDtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<!-- <ngx-loading [show]=\\\"loading\\\"></ngx-loading> -->\\r\\n<div class=\\\"card animatedroute\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    {{pageTitle}}\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form novalidate\\r\\n          (ngSubmit)=\\\"saveProduct()\\\"\\r\\n          [formGroup]=\\\"productForm\\\">\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n               for=\\\"productNameId\\\">Product Name</label>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"productNameId\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 placeholder=\\\"Name (required)\\\"\\r\\n                 formControlName=\\\"productName\\\"\\r\\n                 [ngClass]=\\\"{'is-invalid': displayMessage.productName }\\\" />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{displayMessage.productName}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n               for=\\\"productCodeId\\\">Product Code</label>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"productCodeId\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 placeholder=\\\"Code (required)\\\"\\r\\n                 formControlName=\\\"productCode\\\"\\r\\n                 [ngClass]=\\\"{'is-invalid': displayMessage.productCode}\\\" />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{displayMessage.productCode}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n               for=\\\"starRatingId\\\">Star Rating (1-5)</label>\\r\\n\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"starRatingId\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 placeholder=\\\"Rating (1-5)\\\"\\r\\n                 formControlName=\\\"starRating\\\"\\r\\n                 [ngClass]=\\\"{'is-invalid': displayMessage.starRating}\\\" />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{displayMessage.starRating}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n                for=\\\"priceId\\\">Price</label>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                  id=\\\"priceId\\\"\\r\\n                  type=\\\"number\\\"\\r\\n                  placeholder=\\\"Price (required) (10.50)\\\"\\r\\n                  formControlName=\\\"price\\\"\\r\\n                  [ngClass]=\\\"{'is-invalid': displayMessage.price}\\\" />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{displayMessage.price}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n                for=\\\"availableId\\\">Available</label>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                  id=\\\"availableId\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  required\\r\\n                  placeholder=\\\"Release Date (required) (22/12/2018)\\\"\\r\\n                  formControlName=\\\"releaseDate\\\"\\r\\n                  [ngClass]=\\\"{'is-invalid': displayMessage.releaseDate}\\\" />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{displayMessage.releaseDate}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div formArrayName=\\\"tags\\\">\\r\\n        <div class=\\\"form-group row mb-2\\\"\\r\\n             *ngFor=\\\"let tag of tags.controls; let i=index\\\">\\r\\n          <label class=\\\"col-md-2 col-form-label\\\"\\r\\n                 [attr.for]=\\\"i\\\">Tag</label>\\r\\n\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   [id]=\\\"i\\\"\\r\\n                   type=\\\"text\\\"\\r\\n                   placeholder=\\\"Tag\\\"\\r\\n                   [formControlName]=\\\"i\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col-md-1 delete-button\\\">\\r\\n            <button class=\\\"btn btn-outline-warning btn-sm\\\"\\r\\n              type=\\\"button\\\"\\r\\n              title=\\\"Delete this search tag\\\"\\r\\n              (click)=\\\"deleteTag(i)\\\">Delete Tag\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-1 mb-2 add-tag-button\\\">\\r\\n          <button class=\\\"btn btn-outline-secondary btn-sm\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  title=\\\"Add a search tag\\\"\\r\\n                  (click)=\\\"addTag()\\\">Add Tag\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n               for=\\\"descriptionId\\\">Description</label>\\r\\n\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <textarea class=\\\"form-control\\\"\\r\\n                    id=\\\"descriptionId\\\"\\r\\n                    placeholder=\\\"Description\\\"\\r\\n                    rows=3\\r\\n                    formControlName=\\\"description\\\"\\r\\n                    [ngClass]=\\\"{'is-invalid': displayMessage.description}\\\"></textarea>\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{ displayMessage.description}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n          <label class=\\\"col-md-2 col-form-label\\\"\\r\\n          for=\\\"urlImageId\\\">Online Url</label>\\r\\n\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                  id=\\\"urlImageId\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  placeholder=\\\"Online Image Url (required)\\\"\\r\\n                  formControlName=\\\"imageUrl\\\"\\r\\n                  [ngClass]=\\\"{'is-invalid': displayMessage.imageUrl}\\\"s\\r\\n                  />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n             {{displayMessage.imageUrl}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <span class=\\\"col-md-2 col-form-label\\\"></span>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <img *ngIf=\\\"!displayMessage.imageUrl\\\" [src]=\\\"imgSrc\\\" width=\\\"100\\\"/>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <div class=\\\"offset-md-2 col-md-4\\\">\\r\\n          <button class=\\\"btn btn-primary mr-3\\\"\\r\\n                  style=\\\"width:80px;\\\"\\r\\n                  type=\\\"submit\\\"\\r\\n                  [title]=\\\"productForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\\\"\\r\\n                  [disabled]=\\\"!productForm.valid\\\">\\r\\n            Save\\r\\n          </button>\\r\\n          <button class=\\\"btn btn-outline-secondary mr-3\\\"\\r\\n                  style=\\\"width:80px;\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  title=\\\"Cancel your edits\\\"\\r\\n                  [routerLink]=\\\"['/products']\\\"\\r\\n                  [preserveQueryParams]=\\\"true\\\">\\r\\n            Cancel\\r\\n          </button>\\r\\n          <button class=\\\"btn btn-outline-warning\\\"\\r\\n                  style=\\\"width:80px\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  title=\\\"Delete this product\\\"\\r\\n                  (click)=\\\"deleteProduct()\\\">\\r\\n            Delete\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"alert alert-danger\\\"\\r\\n       *ngIf=\\\"errorMessage\\\">{{errorMessage}}\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChildren, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators, FormControlName } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Observable, Subscription, fromEvent, merge } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { Product } from './product';\r\nimport { ProductService } from './product.service';\r\n\r\nimport { NumberValidators, GenericValidator } from '../shared/index';\r\n\r\n@Component({\r\n  templateUrl: './product-edit.component.html',\r\n  styleUrls: ['./product-edit.component.css']\r\n})\r\nexport class ProductEditComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\r\n  loading = false;\r\n  imgSrc = '';\r\n  pageTitle = 'Product Edit';\r\n  errorMessage: string;\r\n  productForm: FormGroup;\r\n\r\n  product: Product;\r\n  private sub: Subscription;\r\n\r\n  // Use with the generic validation message class\r\n  displayMessage: { [key: string]: string } = {};\r\n  private validationMessages: { [key: string]: { [key: string]: string } };\r\n  private genericValidator: GenericValidator;\r\n\r\n  get tags(): FormArray {\r\n    return <FormArray>this.productForm.get('tags');\r\n  }\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private productService: ProductService) {\r\n\r\n    // Defines all of the validation messages for the form.\r\n    // These could instead be retrieved from a file or database.\r\n    this.validationMessages = {\r\n      productName: {\r\n        required: 'Product name is required.',\r\n        minlength: 'Product name must be at least three characters.',\r\n        maxlength: 'Product name cannot exceed 50 characters.'\r\n      },\r\n      productCode: {\r\n        required: 'Product code is required.'\r\n      },\r\n      starRating: {\r\n        range: 'Rate the product between 1 (lowest) and 5 (highest).'\r\n      },\r\n      imageUrl: {\r\n        required: 'Url Image code is required.',\r\n        minlength: 'Product name must be at least three characters.',\r\n        pattern: 'Must be a png, jpg or svg url '\r\n      },\r\n      price: {\r\n        required: 'price is required.',\r\n        pattern: 'accepts numbers with a maximum of 2 decimal places and with a dot separator.',\r\n      },\r\n      releaseDate: {\r\n        required: 'Release Date is required.',\r\n        pattern: 'accepts valid date dd/mm/yyyy.',\r\n      }\r\n    };\r\n\r\n    // Define an instance of the validator for use with this form,\r\n    // passing in this form's set of validation messages.\r\n    this.genericValidator = new GenericValidator(this.validationMessages);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.productForm = this.fb.group({\r\n      productName: ['', [Validators.required,\r\n      Validators.minLength(3),\r\n      Validators.maxLength(50)]],\r\n      productCode: ['', Validators.required],\r\n      starRating: ['', NumberValidators.range(1, 5)],\r\n      tags: this.fb.array([]),\r\n      description: '',\r\n      price: ['', [Validators.required, Validators.pattern('^[0-9]+(\\.[0-9]{1,2})?$')]],\r\n      releaseDate: ['', [Validators.required, Validators.pattern(`^[0-9]{2}[\\/][0-9]{2}[\\/][0-9]{4}$`)]],\r\n      imageUrl: ['', [Validators.required, Validators.pattern('.*\\/.*.(png|jpg|svg)')]],\r\n    });\r\n\r\n\r\n    // Read the product Id from the route parameter - without resolve\r\n    // this.sub = this.route.paramMap.subscribe(\r\n    //   params => {\r\n    //     const id = +params.get('id');\r\n    //     this.getProduct(id);\r\n    //   }\r\n    // );\r\n\r\n\r\n    // with resolve - but not get updated when form change to new from edit (same page different segment url - ngOnInit)\r\n    // this.product = this.route.snapshot.data['product'];\r\n    // this.displayProduct(this.product);\r\n\r\n    // with resolve - using observable\r\n    this.route.data.subscribe(\r\n      data => {\r\n        this.product = data['product'];\r\n        this.displayProduct(this.product);\r\n      });\r\n\r\n    this.productForm.get('imageUrl').valueChanges.subscribe(\r\n      value => {\r\n        this.imgSrc = value;\r\n        // console.log(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // this.sub.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Watch for the blur event from any input element on the form.\r\n    const controlBlurs: Observable<any>[] = this.formInputElements\r\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\r\n\r\n    // Merge the blur event observable with the valueChanges observable\r\n    merge(this.productForm.valueChanges, ...controlBlurs).pipe(\r\n      debounceTime(800)\r\n    ).subscribe(value => {\r\n      this.displayMessage = this.genericValidator.processMessages(this.productForm);\r\n    });\r\n  }\r\n\r\n  addTag(): void {\r\n    this.tags.push(new FormControl());\r\n  }\r\n\r\n  deleteTag(index: number): void {\r\n    this.tags.removeAt(index);\r\n    this.tags.markAsDirty();\r\n  }\r\n\r\n  // getProduct(id: number): void {\r\n  //   this.loading = true;\r\n  //   this.productService.getProduct(id)\r\n  //     .subscribe(\r\n  //       (product: Product) => {\r\n  //         this.loading = false;\r\n  //         console.log('nisan', product);\r\n  //         return this.displayProduct(product);\r\n  //       },\r\n  //       (error: any) => this.errorMessage = <any>error\r\n  //     );\r\n  // }\r\n\r\n  displayProduct(product: Product): void {\r\n    if (this.productForm) {\r\n      this.productForm.reset();\r\n    }\r\n    this.product = product;\r\n\r\n    if (this.product.id === 0) {\r\n      this.pageTitle = 'Add Product';\r\n    } else {\r\n      this.pageTitle = `Edit Product: ${this.product.productName}`;\r\n    }\r\n    console.log(this.product);\r\n    // Update the data on the form\r\n    this.productForm.patchValue({\r\n      productName: this.product.productName,\r\n      productCode: this.product.productCode,\r\n      starRating: this.product.starRating,\r\n      description: this.product.description,\r\n      imageUrl: this.product.imageUrl,\r\n      price: this.product.price,\r\n      releaseDate: this.product.releaseDate\r\n    });\r\n    this.productForm.setControl('tags', this.fb.array(this.product.tags || []));\r\n  }\r\n\r\n  deleteProduct(): void {\r\n    if (this.product.id === 0) {\r\n      // Don't delete, it was never saved.\r\n      this.onSaveComplete();\r\n    } else {\r\n      if (confirm(`Really delete the product: ${this.product.productName}?`)) {\r\n        this.loading = true;\r\n        this.productService.deleteProduct(this.product.id)\r\n          .subscribe(\r\n            () => {\r\n              this.loading = false;\r\n              return this.onSaveComplete();\r\n            },\r\n            (error: any) => this.errorMessage = <any>error\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  saveProduct(): void {\r\n    if (this.productForm.valid) {\r\n      if (this.productForm.dirty) {\r\n        const p = { ...this.product, ...this.productForm.value };\r\n\r\n        if (p.id === 0) {\r\n          this.productService.createProduct(p)\r\n            .subscribe(\r\n              () => this.onSaveComplete(),\r\n              (error: any) => this.errorMessage = <any>error\r\n            );\r\n        } else {\r\n          this.productService.updateProduct(p)\r\n            .subscribe(\r\n              () => this.onSaveComplete(),\r\n              (error: any) => this.errorMessage = <any>error\r\n            );\r\n        }\r\n      } else {\r\n        this.onSaveComplete();\r\n      }\r\n    } else {\r\n      this.errorMessage = 'Please correct the validation errors.';\r\n    }\r\n  }\r\n\r\n  onSaveComplete(): void {\r\n    // Reset the form to clear the flags\r\n    this.productForm.reset();\r\n    this.router.navigate(['/products'], { queryParamsHandling: 'preserve' });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ProductEditComponent } from './product-edit.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductEditGuard implements CanDeactivate<ProductEditComponent> {\n  canDeactivate(component: ProductEditComponent): Observable<boolean> | Promise<boolean> | boolean {\n    if (component.productForm.dirty) {\n      const productName = component.productForm.get('productName').value || 'New Product';\n      return confirm(`Navigate away and lose all changes to ${productName}?`);\n    }\n    return true;\n  }\n}\n","module.exports = \"thead {\\n  color: #337AB7;\\n}\\n.row {\\n  padding-bottom: 1.25rem;\\n\\n}\\n@media (max-width: 767px) {\\n  thead {\\n    display: none;\\n  }\\n  tr {\\n    display: flex;\\n    flex-direction: column;\\n    border: 1px solid #DFD7CA;\\n    margin-top: 26px;\\n  }\\n  .imageBlock {\\n    margin: auto;\\n    border-top: none;\\n  }\\n\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0NBQ2hCO0FBQ0Q7RUFDRSx3QkFBd0I7O0NBRXpCO0FBRUQ7RUFDRTtJQUNFLGNBQWM7R0FDZjtFQUNEO0lBQ0UsY0FBYztJQUNkLHVCQUF1QjtJQUN2QiwwQkFBMEI7SUFDMUIsaUJBQWlCO0dBQ2xCO0VBQ0Q7SUFDRSxhQUFhO0lBQ2IsaUJBQWlCO0dBQ2xCOztDQUVGIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0aGVhZCB7XG4gIGNvbG9yOiAjMzM3QUI3O1xufVxuLnJvdyB7XG4gIHBhZGRpbmctYm90dG9tOiAxLjI1cmVtO1xuXG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICB0aGVhZCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICB0ciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNERkQ3Q0E7XG4gICAgbWFyZ2luLXRvcDogMjZweDtcbiAgfVxuICAuaW1hZ2VCbG9jayB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGJvcmRlci10b3A6IG5vbmU7XG4gIH1cblxufVxuXG5cbiJdfQ== */\"","module.exports = \"<!-- <ngx-loading [show]=\\\"loading\\\"></ngx-loading> -->\\n<div class=\\\"card animatedroute\\\">\\n  <div class=\\\"card-header\\\">\\n    {{pageTitle}}\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-2\\\">Filter by:</div>\\n      <div class=\\\"col-md-4\\\">\\n        <input type=\\\"text\\\"\\n               [(ngModel)]=\\\"listFilter\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\"\\n         *ngIf=\\\"listFilter\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <h4>Filtered by: {{listFilter}}</h4>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table mb-0\\\"\\n             *ngIf=\\\"products && products.length\\\">\\n        <thead>\\n          <tr>\\n            <th></th>\\n            <th>Product</th>\\n            <th>Code</th>\\n            <th>Available</th>\\n            <th>Price</th>\\n            <th>5 Star Rating</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let product of filteredProducts\\\">\\n            <td class=\\\"imageBlock\\\">\\n              <img *ngIf=\\\"product.imageUrl\\\"\\n                   [src]=\\\"product.imageUrl\\\"\\n                   [title]=\\\"product.productName\\\"\\n                   [style.width.px]=\\\"imageWidth\\\"\\n                   [style.margin.px]=\\\"imageMargin\\\">\\n            </td>\\n            <td>\\n              <a [routerLink]=\\\"['/products', product.id]\\\"\\n                  [queryParams]=\\\"{filterBy: listFilter}\\\">\\n                {{ product.productName }}\\n              </a>\\n            </td>\\n            <td>{{ product.productCode }}</td>\\n            <td>{{ product.releaseDate }}</td>\\n            <td>{{ product.price | currency:\\\"USD\\\":\\\"symbol\\\":\\\"1.2-2\\\" }}</td>\\n            <td>\\n              <wn-star [rating]=\\\"product.starRating\\\">\\n              </wn-star>\\n            </td>\\n            <td>\\n              <button class=\\\"btn btn-outline-primary btn-sm\\\"\\n                      [routerLink]=\\\"['/products', product.id, 'edit']\\\"\\n                      [queryParams]=\\\"{filterBy: listFilter}\\\">\\n                Edit\\n              </button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"errorMessage\\\"\\n     class=\\\"alert alert-danger\\\">\\n  Error: {{ errorMessage }}\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Product } from './product';\r\nimport { ProductService } from './product.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n  pageTitle = 'Product List';\r\n  imageWidth = 50;\r\n  imageMargin = 2;\r\n  errorMessage = '';\r\n  loading = false;\r\n\r\n  _listFilter = '';\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this.loading = true;\r\n    this._listFilter = value;\r\n    this.filteredProducts = this.listFilter ? this.performFilter(this.listFilter) : this.products;\r\n    this.loading = false;\r\n  }\r\n\r\n  filteredProducts: Product[] = [];\r\n  products: Product[] = [];\r\n\r\n  constructor(private productService: ProductService, private route: ActivatedRoute) { }\r\n\r\n\r\n  performFilter(filterBy: string): Product[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.products.filter((product: Product) =>\r\n      product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n      this.productService.getProducts().subscribe(\r\n        products => {\r\n          this.products = products;\r\n          this.listFilter = this.route.snapshot.queryParams['filterBy'] || '';\r\n          if (this.listFilter === '') {\r\n            this.filteredProducts = this.products;\r\n          }\r\n\r\n          this.loading = false;\r\n        },\r\n        error => this.errorMessage = <any>error\r\n      );\r\n\r\n  }\r\n}\r\n","\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of, throwError } from 'rxjs';\n// import { map, catchError } from 'rxjs/operators';\n\nimport { ProductService } from './product.service';\nimport { Product } from './product';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductResolverService implements Resolve<Product> {\n\n  constructor(private productService: ProductService, private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Product> {\n    const id = +route.params['id'];\n    return this.productService.getProduct(id);\n\n    // const id = route.params['id'];\n    // if (isNaN(id)) {\n    //   console.log(`product id is not a number: ${id}`);\n    //   this.router.navigate(['/products']);\n    //   return of(null);\n    // }\n    // return this.productService.getProduct(+id)\n    //   .pipe(map(product => {\n    //     if (product) {\n    //       return product;\n    //     }\n    //     console.log(`product not found: ${id}`);\n    //     this.router.navigate(['/products']);\n    //     return null;\n    //   }))\n    //   .pipe(catchError(error => {\n    //     console.log(`rerieval error: ${error}`);\n    //     this.router.navigate(['/products']);\n    //     return Observable.of(null);\n    //   }));\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductListComponent } from './product-list.component';\r\nimport { ProductDetailComponent } from './product-detail.component';\r\nimport { ProductEditComponent } from './product-edit.component';\r\nimport { ProductEditGuard } from './product-edit.guard';\r\nimport { ProductResolverService } from './product-resolver.service';\r\n\r\nconst routes: Routes = [\r\n{\r\n  path: 'products',\r\n  children: [\r\n    { path: '',\r\n      component: ProductListComponent },\r\n    {\r\n      path: ':id',\r\n      component: ProductDetailComponent,\r\n      resolve: { product: ProductResolverService}\r\n    },\r\n    {\r\n      path: ':id/edit',\r\n      canDeactivate: [ProductEditGuard],\r\n      component: ProductEditComponent,\r\n      resolve: { product: ProductResolverService}\r\n    }\r\n  ]\r\n}\r\n  // { path: 'products', component: ProductListComponent },\r\n  // {\r\n  //   path: 'products/:id',\r\n  //   component: ProductDetailComponent,\r\n  //   resolve: { product: ProductResolverService}\r\n  // },\r\n  // {\r\n  //   path: 'products/:id/edit',\r\n  //   canDeactivate: [ProductEditGuard],\r\n  //   component: ProductEditComponent,\r\n  //   resolve: { product: ProductResolverService}\r\n  // }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ProductRoutingModule } from './product-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n// import { ProductResolverService } from './product-resolver.service';\r\n\r\nimport {\r\n  ProductListComponent,\r\n  ProductDetailComponent,\r\n  ProductEditComponent,\r\n  ProductEditGuard,\r\n  ProductResolverService\r\n} from './index';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    NgxLoadingModule.forRoot({}),\r\n    ProductRoutingModule\r\n  ],\r\n  declarations: [\r\n    ProductListComponent,\r\n    ProductDetailComponent,\r\n    ProductEditComponent\r\n  ],\r\n  providers: [ProductResolverService]\r\n})\r\nexport class ProductModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\nimport { Product } from './product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private productsUrl = 'api/products';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.productsUrl)\r\n      .pipe(\r\n        tap(data => console.log(JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getProduct(id: number): Observable<Product> {\r\n    if (id === 0) {\r\n      return of(this.initializeProduct());\r\n    }\r\n    const url = `${this.productsUrl}/${id}`;\r\n    return this.http.get<Product>(url)\r\n      .pipe(\r\n        tap(data => console.log('getProduct: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  createProduct(product: Product): Observable<Product> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    product.id = null;\r\n    return this.http.post<Product>(this.productsUrl, product, { headers: headers })\r\n      .pipe(\r\n        tap(data => console.log('createProduct: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deleteProduct(id: number): Observable<{}> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    const url = `${this.productsUrl}/${id}`;\r\n    return this.http.delete<Product>(url, { headers: headers })\r\n      .pipe(\r\n        tap(data => console.log('deleteProduct: ' + id)),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateProduct(product: Product): Observable<Product> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    const url = `${this.productsUrl}/${product.id}`;\r\n    return this.http.put<Product>(url, product, { headers: headers })\r\n      .pipe(\r\n        tap(() => console.log('updateProduct: ' + product.id)),\r\n        // Return the product on an update\r\n        map(() => product),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(err) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage: string;\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\r\n    }\r\n    console.error(err);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  private initializeProduct(): Product {\r\n    // Return an initialized object\r\n    return {\r\n      id: 0,\r\n      productName: null,\r\n      productCode: null,\r\n      tags: [''],\r\n      releaseDate: null,\r\n      price: null,\r\n      description: null,\r\n      starRating: null,\r\n      imageUrl: null\r\n    };\r\n  }\r\n}\r\n","import { FormGroup } from '@angular/forms';\n\n// Generic validator for Reactive forms\n// Implemented as a class, not a service, so it can retain state for multiple forms.\nexport class GenericValidator {\n\n  // Provide the set of valid validation messages\n  // Stucture:\n  // controlName1: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // },\n  // controlName2: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // }\n  constructor(private validationMessages: { [key: string]: { [key: string]: string } }) {\n\n  }\n\n  // Processes each control within a FormGroup\n  // And returns a set of validation messages to display\n  // Structure\n  // controlName1: 'Validation Message.',\n  // controlName2: 'Validation Message.'\n  processMessages(container: FormGroup): { [key: string]: string } {\n    const messages = {};\n    for (const controlKey in container.controls) {\n      if (container.controls.hasOwnProperty(controlKey)) {\n        const c = container.controls[controlKey];\n        // If it is a FormGroup, process its child controls.\n        if (c instanceof FormGroup) {\n          const childMessages = this.processMessages(c);\n          Object.assign(messages, childMessages);\n        } else {\n          // Only validate if there are validation messages for the control\n          if (this.validationMessages[controlKey]) {\n            messages[controlKey] = '';\n            if ((c.dirty || c.touched) && c.errors) {\n              Object.keys(c.errors).map(messageKey => {\n                if (this.validationMessages[controlKey][messageKey]) {\n                  messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\n                }\n              });\n            }\n          }\n        }\n      }\n    }\n    return messages;\n  }\n\n  getErrorCount(container: FormGroup): number {\n    let errorCount = 0;\n    for (const controlKey in container.controls) {\n      if (container.controls.hasOwnProperty(controlKey)) {\n        if (container.controls[controlKey].errors) {\n          errorCount += Object.keys(container.controls[controlKey].errors).length;\n          console.log(errorCount);\n        }\n      }\n    }\n    return errorCount;\n  }\n}\n","export * from './generic-validator';\r\nexport * from './number.validator';\r\nexport * from './star.component';\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class NumberValidators {\n\n  static range(min: number, max: number): ValidatorFn {\n    return (c: AbstractControl): { [key: string]: boolean } | null => {\n      if (c.value && (isNaN(c.value) || c.value < min || c.value > max)) {\n        return { 'range': true };\n      }\n      return null;\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { StarComponent } from './index';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    StarComponent\n  ],\n  exports: [\n    StarComponent,\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SharedModule { }\n","module.exports = \".crop {\\n  overflow: hidden;\\n}\\ndiv {\\n  cursor: pointer;\\n}\\n.fa-star {\\n  color: gold;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3N0YXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtDQUNsQjtBQUNEO0VBQ0UsZ0JBQWdCO0NBQ2pCO0FBRUQ7RUFDRSxZQUFZO0NBQ2IiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvc3Rhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNyb3Age1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuZGl2IHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uZmEtc3RhciB7XG4gIGNvbG9yOiBnb2xkO1xufVxuIl19 */\"","module.exports = \"<div class=\\\"crop\\\"\\n     [style.width.px]=\\\"starWidth\\\"\\n     [title]=\\\"rating\\\"\\n     (click)=\\\"onClick()\\\">\\n  <div style=\\\"width: 75px\\\">\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n  </div>\\n</div>\"","import { Component, OnChanges, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'wn-star',\n  templateUrl: './star.component.html',\n  styleUrls: ['./star.component.css']\n})\nexport class StarComponent implements OnChanges {\n  @Input() rating = 0;\n  starWidth = 0;\n  @Output() ratingClicked: EventEmitter<string> =\n    new EventEmitter<string>();\n\n  ngOnChanges(): void {\n    this.starWidth = this.rating * 75 / 5;\n  }\n\n  onClick(): void {\n    this.ratingClicked.emit(`The rating ${this.rating} was clicked!`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { IUser } from './user';\nimport { MessageService } from '../messages/message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  currentUser: IUser;\n\n  constructor(private messageService: MessageService) { }\n\n  isLoggedIn(): boolean {\n      return !!this.currentUser;\n  }\n\n  login(userName: string, password: string): void {\n      if (!userName || !password) {\n          this.messageService.addMessage('Please enter your userName and password');\n          return;\n      }\n      if (userName === 'admin') {\n          this.currentUser = {\n              id: 1,\n              userName: userName,\n              isAdmin: true\n          };\n          this.messageService.addMessage('Admin login');\n          return;\n      }\n      this.currentUser = {\n          id: 2,\n          userName: userName,\n          isAdmin: false\n      };\n      this.messageService.addMessage(`User: ${this.currentUser.userName} logged in`);\n  }\n\n  logout(): void {\n      this.currentUser = null;\n  }\n}\n","module.exports = \"<div class=\\\"card animatedroute2\\\">\\n  <div class=\\\"card-header\\\">\\n      {{pageTitle}}\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n      <form\\n            novalidate\\n            (ngSubmit)=\\\"login(loginForm)\\\"\\n            #loginForm=\\\"ngForm\\\"\\n            autocomplete=\\\"off\\\" >\\n          <fieldset>\\n              <div class=\\\"form-group\\\"\\n                   [ngClass]=\\\"{'has-error': (userNameVar.touched ||\\n                                             userNameVar.dirty) &&\\n                                             !userNameVar.valid }\\\">\\n                  <label class=\\\"col-md-2\\\"\\n                         for=\\\"userNameId\\\">User Name</label>\\n\\n                  <div class=\\\"col-md-8\\\">\\n                      <input class=\\\"form-control\\\"\\n                              id=\\\"userNameId\\\"\\n                              type=\\\"text\\\"\\n                              placeholder=\\\"User Name (required)\\\"\\n                              required\\n                              (ngModel) = \\\"userName\\\"\\n                              name=\\\"userName\\\"\\n                              #userNameVar=\\\"ngModel\\\" />\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"(userNameVar.touched ||\\n                                                       userNameVar.dirty) &&\\n                                                       userNameVar.errors\\\">\\n                          <span *ngIf=\\\"userNameVar.errors.required\\\">\\n                              User name is required.\\n                          </span>\\n                      </span>\\n                  </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\"\\n                   [ngClass]=\\\"{'has-error': (passwordVar.touched ||\\n                                             passwordVar.dirty) &&\\n                                             !passwordVar.valid }\\\">\\n                  <label class=\\\"col-md-2\\\" for=\\\"passwordId\\\">Password</label>\\n\\n                  <div class=\\\"col-md-8\\\">\\n                      <input class=\\\"form-control\\\"\\n                              id=\\\"passwordId\\\"\\n                              type=\\\"password\\\"\\n                              placeholder=\\\"Password (required)\\\"\\n                              required\\n                              (ngModel) = \\\"password\\\"\\n                              name=\\\"password\\\"\\n                              #passwordVar=\\\"ngModel\\\" />\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"(passwordVar.touched ||\\n                                                       passwordVar.dirty) &&\\n                                                       passwordVar.errors\\\">\\n                          <span *ngIf=\\\"passwordVar.errors.required\\\">\\n                              Password is required.\\n                          </span>\\n                      </span>\\n                  </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-md-4 col-md-offset-2\\\">\\n                      <span>\\n                          <button class=\\\"btn btn-primary\\\"\\n                                  type=\\\"submit\\\"\\n                                  style=\\\"width:80px;margin-right:10px\\\"\\n                                  [disabled]=\\\"!loginForm.valid\\\">\\n                              Log In\\n                          </button>\\n                      </span>\\n                      <span>\\n                          <a [routerLink]=\\\"['/home']\\\" class=\\\"btn btn-default\\\">\\n                              Cancel\\n                          </a>\\n                      </span>\\n                   </div>\\n              </div>\\n          </fieldset>\\n      </form>\\n      <div class=\\\"has-error\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n  </div>\\n\\n</div>\\n\"","module.exports = \".btn-default {\\n  color: #000; }\\n\\n.has-error .form-control {\\n  border: 1px solid red; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9EOlxcYXBwc1xcbXktYXBwL3NyY1xcYXBwXFx1c2VyXFxsb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVcsRUFDWjs7QUFDRDtFQUVJLHNCQUFxQixFQUN0QiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWRlZmF1bHQge1xyXG4gIGNvbG9yOiAjMDAwO1xyXG59XHJcbi5oYXMtZXJyb3Ige1xyXG4gIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from './auth.service';\n\n@Component({\n  // selector: 'wn-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  errorMessage: string;\n  pageTitle = 'Log In';\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n\n  login(loginForm: NgForm) {\n      if (loginForm && loginForm.valid) {\n          const userName = loginForm.form.value.userName;\n          const password = loginForm.form.value.password;\n          this.authService.login(userName, password);\n\n          this.router.navigate(['/products']);\n      } else {\n          this.errorMessage = 'Please enter a user name and password.';\n      }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginComponent } from './login.component';\nimport { AuthService } from './auth.service';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    UserRoutingModule\n  ],\n  providers: [\n    AuthService\n  ]\n})\nexport class UserModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}