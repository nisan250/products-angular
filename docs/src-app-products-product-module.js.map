{"version":3,"sources":["webpack:///./src/app/products/index.ts","webpack:///./src/app/products/product-detail.component.css","webpack:///./src/app/products/product-detail.component.html","webpack:///./src/app/products/product-detail.component.ts","webpack:///./src/app/products/product-edit.component.css","webpack:///./src/app/products/product-edit.component.html","webpack:///./src/app/products/product-edit.component.ts","webpack:///./src/app/products/product-edit.guard.ts","webpack:///./src/app/products/product-list.component.css","webpack:///./src/app/products/product-list.component.html","webpack:///./src/app/products/product-list.component.ts","webpack:///./src/app/products/product-resolver.service.ts","webpack:///./src/app/products/product-routing.module.ts","webpack:///./src/app/products/product.module.ts","webpack:///./src/app/products/product.service.ts","webpack:///./src/app/products/products-resolver.service.ts"],"names":[],"mappings":"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","file":"src-app-products-product-module.js","sourcesContent":["export * from './product-list.component';\r\nexport * from './product-detail.component';\r\nexport * from './product-edit.component';\r\nexport * from './product-edit.guard';\r\nexport * from './product-resolver.service';\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card animatedroute\\\">\\n  <div class=\\\"card-header\\\"\\n       *ngIf=\\\"product\\\">\\n    {{pageTitle + \\\": \\\" + product.productName}}\\n  </div>\\n\\n  <div class=\\\"card-body\\\"\\n       *ngIf=\\\"product\\\">\\n\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Name:</div>\\n          <div class=\\\"col-md-6\\\">{{product.productName}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Code:</div>\\n          <div class=\\\"col-md-6\\\">{{product.productCode}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Description:</div>\\n          <div class=\\\"col-md-6\\\">{{product.description}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Availability:</div>\\n          <div class=\\\"col-md-6\\\">{{product.releaseDate}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Price:</div>\\n          <div class=\\\"col-md-6\\\">{{product.price|currency:\\\"USD\\\":\\\"symbol\\\"}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">5 Star Rating:</div>\\n          <div class=\\\"col-md-6\\\">\\n            <wn-star [rating]=\\\"product.starRating\\\">\\n            </wn-star>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Tags:</div>\\n          <div class=\\\"col-md-6\\\">{{product.tags}}</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\"\\n           *ngIf=\\\"product.imageUrl\\\">\\n        <img class=\\\"center-block img-responsive\\\"\\n             [style.height.px]=\\\"150\\\"\\n             [style.margin.px]=\\\"2\\\"\\n             [src]=\\\"product.imageUrl\\\"\\n             [title]=\\\"product.productName\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <button class=\\\"btn btn-outline-secondary mr-3\\\"\\n                style=\\\"width:80px\\\"\\n                [routerLink]=\\\"['/products']\\\"\\n                [preserveQueryParams]=\\\"true\\\"><!--(click)=\\\"onBack()-->\\n          <i class=\\\"fa fa-chevron-left\\\"></i> Back\\n        </button>\\n        <button class=\\\"btn btn-outline-primary\\\"\\n                style=\\\"width:80px\\\"\\n                [routerLink]=\\\"['/products', product.id, 'edit']\\\"\\n                [preserveQueryParams]=\\\"true\\\">\\n          Edit\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"alert alert-danger\\\"\\n       *ngIf=\\\"errorMessage\\\">{{errorMessage}}\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Product } from './product';\r\n// import { ProductService } from './product.service';\r\n\r\n@Component({\r\n  templateUrl: './product-detail.component.html',\r\n  styleUrls: ['./product-detail.component.css']\r\n})\r\nexport class ProductDetailComponent implements OnInit {\r\n  pageTitle = 'Product Detail';\r\n  errorMessage = '';\r\n  product: Product | undefined;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // get data  from a resolve on the route\r\n    this.product = this.route.snapshot.data['product'];\r\n\r\n    /* without the resolver\r\n    const param = this.route.snapshot.paramMap.get('id');\r\n    if (param) {\r\n      const id = +param;\r\n      this.getProduct(id);\r\n    }\r\n    */\r\n  }\r\n\r\n  /* without the resolver\r\n    getProduct(id: number) {\r\n    this.productService.getProduct(id).subscribe(\r\n      product => this.product = product,\r\n      error => this.errorMessage = <any>error);\r\n  }\r\n  */\r\n\r\n  onBack(): void {\r\n    this.router.navigate(['/products']);\r\n  }\r\n\r\n}\r\n","module.exports = \"@media (max-width: 767px) {\\r\\n  .delete-button {\\r\\n    margin-top: 6px;\\r\\n  }\\r\\n  .add-tag-button{\\r\\n    margin-top: 26px;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdC1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRTtJQUNFLGdCQUFnQjtHQUNqQjtFQUNEO0lBQ0UsaUJBQWlCO0dBQ2xCO0NBQ0YiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9wcm9kdWN0LWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xyXG4gIC5kZWxldGUtYnV0dG9uIHtcclxuICAgIG1hcmdpbi10b3A6IDZweDtcclxuICB9XHJcbiAgLmFkZC10YWctYnV0dG9ue1xyXG4gICAgbWFyZ2luLXRvcDogMjZweDtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<!-- <ngx-loading [show]=\\\"loading\\\"></ngx-loading> -->\\r\\n<div class=\\\"card animatedroute\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    {{pageTitle}}\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form novalidate\\r\\n          (ngSubmit)=\\\"saveProduct()\\\"\\r\\n          [formGroup]=\\\"productForm\\\">\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n               for=\\\"productNameId\\\">Product Name</label>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"productNameId\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 placeholder=\\\"Name (required)\\\"\\r\\n                 formControlName=\\\"productName\\\"\\r\\n                 [ngClass]=\\\"{'is-invalid': displayMessage.productName }\\\" />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{displayMessage.productName}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n               for=\\\"productCodeId\\\">Product Code</label>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"productCodeId\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 placeholder=\\\"Code (required)\\\"\\r\\n                 formControlName=\\\"productCode\\\"\\r\\n                 [ngClass]=\\\"{'is-invalid': displayMessage.productCode}\\\" />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{displayMessage.productCode}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n               for=\\\"starRatingId\\\">Star Rating (1-5)</label>\\r\\n\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                 id=\\\"starRatingId\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 placeholder=\\\"Rating (1-5)\\\"\\r\\n                 formControlName=\\\"starRating\\\"\\r\\n                 [ngClass]=\\\"{'is-invalid': displayMessage.starRating}\\\" />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{displayMessage.starRating}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n                for=\\\"priceId\\\">Price</label>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                  id=\\\"priceId\\\"\\r\\n                  type=\\\"number\\\"\\r\\n                  placeholder=\\\"Price (required) (10.50)\\\"\\r\\n                  formControlName=\\\"price\\\"\\r\\n                  [ngClass]=\\\"{'is-invalid': displayMessage.price}\\\" />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{displayMessage.price}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n                for=\\\"availableId\\\">Available</label>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                  id=\\\"availableId\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  required\\r\\n                  placeholder=\\\"Release Date (required) (22/12/2018)\\\"\\r\\n                  formControlName=\\\"releaseDate\\\"\\r\\n                  [ngClass]=\\\"{'is-invalid': displayMessage.releaseDate}\\\" />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{displayMessage.releaseDate}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div formArrayName=\\\"tags\\\">\\r\\n        <div class=\\\"form-group row mb-2\\\"\\r\\n             *ngFor=\\\"let tag of tags.controls; let i=index\\\">\\r\\n          <label class=\\\"col-md-2 col-form-label\\\"\\r\\n                 [attr.for]=\\\"i\\\">Tag</label>\\r\\n\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <input class=\\\"form-control\\\"\\r\\n                   [id]=\\\"i\\\"\\r\\n                   type=\\\"text\\\"\\r\\n                   placeholder=\\\"Tag\\\"\\r\\n                   [formControlName]=\\\"i\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col-md-1 delete-button\\\">\\r\\n            <button class=\\\"btn btn-outline-warning btn-sm\\\"\\r\\n              type=\\\"button\\\"\\r\\n              title=\\\"Delete this search tag\\\"\\r\\n              (click)=\\\"deleteTag(i)\\\">Delete Tag\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-1 mb-2 add-tag-button\\\">\\r\\n          <button class=\\\"btn btn-outline-secondary btn-sm\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  title=\\\"Add a search tag\\\"\\r\\n                  (click)=\\\"addTag()\\\">Add Tag\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <label class=\\\"col-md-2 col-form-label\\\"\\r\\n               for=\\\"descriptionId\\\">Description</label>\\r\\n\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <textarea class=\\\"form-control\\\"\\r\\n                    id=\\\"descriptionId\\\"\\r\\n                    placeholder=\\\"Description\\\"\\r\\n                    rows=3\\r\\n                    formControlName=\\\"description\\\"\\r\\n                    [ngClass]=\\\"{'is-invalid': displayMessage.description}\\\"></textarea>\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n            {{ displayMessage.description}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n          <label class=\\\"col-md-2 col-form-label\\\"\\r\\n          for=\\\"urlImageId\\\">Online Url</label>\\r\\n\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <input class=\\\"form-control\\\"\\r\\n                  id=\\\"urlImageId\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  placeholder=\\\"Online Image Url (required)\\\"\\r\\n                  formControlName=\\\"imageUrl\\\"\\r\\n                  [ngClass]=\\\"{'is-invalid': displayMessage.imageUrl}\\\"s\\r\\n                  />\\r\\n          <span class=\\\"invalid-feedback\\\">\\r\\n             {{displayMessage.imageUrl}}\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <span class=\\\"col-md-2 col-form-label\\\"></span>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <img *ngIf=\\\"!displayMessage.imageUrl\\\" [src]=\\\"imgSrc\\\" width=\\\"100\\\"/>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row mb-2\\\">\\r\\n        <div class=\\\"offset-md-2 col-md-4\\\">\\r\\n          <button class=\\\"btn btn-primary mr-3\\\"\\r\\n                  style=\\\"width:80px;\\\"\\r\\n                  type=\\\"submit\\\"\\r\\n                  [title]=\\\"productForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\\\"\\r\\n                  [disabled]=\\\"!productForm.valid\\\">\\r\\n            Save\\r\\n          </button>\\r\\n          <button class=\\\"btn btn-outline-secondary mr-3\\\"\\r\\n                  style=\\\"width:80px;\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  title=\\\"Cancel your edits\\\"\\r\\n                  [routerLink]=\\\"['/products']\\\"\\r\\n                  [preserveQueryParams]=\\\"true\\\">\\r\\n            Cancel\\r\\n          </button>\\r\\n          <button class=\\\"btn btn-outline-warning\\\"\\r\\n                  style=\\\"width:80px\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  title=\\\"Delete this product\\\"\\r\\n                  (click)=\\\"deleteProduct()\\\">\\r\\n            Delete\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"alert alert-danger\\\"\\r\\n       *ngIf=\\\"errorMessage\\\">{{errorMessage}}\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChildren, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators, FormControlName } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Observable, Subscription, fromEvent, merge } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { Product } from './product';\r\nimport { ProductService } from './product.service';\r\n\r\nimport { NumberValidators, GenericValidator } from '../shared/index';\r\n\r\n@Component({\r\n  templateUrl: './product-edit.component.html',\r\n  styleUrls: ['./product-edit.component.css']\r\n})\r\nexport class ProductEditComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\r\n  loading = false;\r\n  imgSrc = '';\r\n  pageTitle = 'Product Edit';\r\n  errorMessage: string;\r\n  productForm: FormGroup;\r\n\r\n  product: Product;\r\n  private sub: Subscription;\r\n\r\n  // Use with the generic validation message class\r\n  displayMessage: { [key: string]: string } = {};\r\n  private validationMessages: { [key: string]: { [key: string]: string } };\r\n  private genericValidator: GenericValidator;\r\n\r\n  get tags(): FormArray {\r\n    return <FormArray>this.productForm.get('tags');\r\n  }\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private productService: ProductService) {\r\n\r\n    // Defines all of the validation messages for the form.\r\n    // These could instead be retrieved from a file or database.\r\n    this.validationMessages = {\r\n      productName: {\r\n        required: 'Product name is required.',\r\n        minlength: 'Product name must be at least three characters.',\r\n        maxlength: 'Product name cannot exceed 50 characters.'\r\n      },\r\n      productCode: {\r\n        required: 'Product code is required.'\r\n      },\r\n      starRating: {\r\n        range: 'Rate the product between 1 (lowest) and 5 (highest).'\r\n      },\r\n      imageUrl: {\r\n        required: 'Url Image code is required.',\r\n        minlength: 'Product name must be at least three characters.',\r\n        pattern: 'Must be a png, jpg or svg url '\r\n      },\r\n      price: {\r\n        required: 'price is required.',\r\n        pattern: 'accepts numbers with a maximum of 2 decimal places and with a dot separator.',\r\n      },\r\n      releaseDate: {\r\n        required: 'Release Date is required.',\r\n        pattern: 'accepts valid date dd/mm/yyyy.',\r\n      }\r\n    };\r\n\r\n    // Define an instance of the validator for use with this form,\r\n    // passing in this form's set of validation messages.\r\n    this.genericValidator = new GenericValidator(this.validationMessages);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.productForm = this.fb.group({\r\n      productName: ['', [Validators.required,\r\n      Validators.minLength(3),\r\n      Validators.maxLength(50)]],\r\n      productCode: ['', Validators.required],\r\n      starRating: ['', NumberValidators.range(1, 5)],\r\n      tags: this.fb.array([]),\r\n      description: '',\r\n      price: ['', [Validators.required, Validators.pattern('^[0-9]+(\\.[0-9]{1,2})?$')]],\r\n      releaseDate: ['', [Validators.required, Validators.pattern(`^[0-9]{2}[\\/][0-9]{2}[\\/][0-9]{4}$`)]],\r\n      imageUrl: ['', [Validators.required, Validators.pattern('.*\\/.*.(png|jpg|svg)')]],\r\n    });\r\n\r\n\r\n    // Read the product Id from the route parameter - without resolve\r\n    // this.sub = this.route.paramMap.subscribe(\r\n    //   params => {\r\n    //     const id = +params.get('id');\r\n    //     this.getProduct(id);\r\n    //   }\r\n    // );\r\n\r\n\r\n    // with resolve - but not get updated when form change to new from edit (same page different segment url - ngOnInit)\r\n    // this.product = this.route.snapshot.data['product'];\r\n    // this.displayProduct(this.product);\r\n\r\n    // with resolve - using observable\r\n    this.route.data.subscribe(\r\n      data => {\r\n        this.product = data['product'];\r\n        this.displayProduct(this.product);\r\n      });\r\n\r\n    this.productForm.get('imageUrl').valueChanges.subscribe(\r\n      value => {\r\n        this.imgSrc = value;\r\n        // console.log(value);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // this.sub.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Watch for the blur event from any input element on the form.\r\n    const controlBlurs: Observable<any>[] = this.formInputElements\r\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\r\n\r\n    // Merge the blur event observable with the valueChanges observable\r\n    merge(this.productForm.valueChanges, ...controlBlurs).pipe(\r\n      debounceTime(800)\r\n    ).subscribe(value => {\r\n      this.displayMessage = this.genericValidator.processMessages(this.productForm);\r\n    });\r\n  }\r\n\r\n  addTag(): void {\r\n    this.tags.push(new FormControl());\r\n  }\r\n\r\n  deleteTag(index: number): void {\r\n    this.tags.removeAt(index);\r\n    this.tags.markAsDirty();\r\n  }\r\n\r\n  // getProduct(id: number): void {\r\n  //   this.loading = true;\r\n  //   this.productService.getProduct(id)\r\n  //     .subscribe(\r\n  //       (product: Product) => {\r\n  //         this.loading = false;\r\n  //         console.log('nisan', product);\r\n  //         return this.displayProduct(product);\r\n  //       },\r\n  //       (error: any) => this.errorMessage = <any>error\r\n  //     );\r\n  // }\r\n\r\n  displayProduct(product: Product): void {\r\n    if (this.productForm) {\r\n      this.productForm.reset();\r\n    }\r\n    this.product = product;\r\n\r\n    if (this.product.id === 0) {\r\n      this.pageTitle = 'Add Product';\r\n    } else {\r\n      this.pageTitle = `Edit Product: ${this.product.productName}`;\r\n    }\r\n    console.log(this.product);\r\n    // Update the data on the form\r\n    this.productForm.patchValue({\r\n      productName: this.product.productName,\r\n      productCode: this.product.productCode,\r\n      starRating: this.product.starRating,\r\n      description: this.product.description,\r\n      imageUrl: this.product.imageUrl,\r\n      price: this.product.price,\r\n      releaseDate: this.product.releaseDate\r\n    });\r\n    this.productForm.setControl('tags', this.fb.array(this.product.tags || []));\r\n  }\r\n\r\n  deleteProduct(): void {\r\n    if (this.product.id === 0) {\r\n      // Don't delete, it was never saved.\r\n      this.onSaveComplete();\r\n    } else {\r\n      if (confirm(`Really delete the product: ${this.product.productName}?`)) {\r\n        this.loading = true;\r\n        this.productService.deleteProduct(this.product.id)\r\n          .subscribe(\r\n            () => {\r\n              this.loading = false;\r\n              return this.onSaveComplete();\r\n            },\r\n            (error: any) => this.errorMessage = <any>error\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  saveProduct(): void {\r\n    if (this.productForm.valid) {\r\n      if (this.productForm.dirty) {\r\n        const p = { ...this.product, ...this.productForm.value };\r\n\r\n        if (p.id === 0) {\r\n          this.productService.createProduct(p)\r\n            .subscribe(\r\n              () => this.onSaveComplete(),\r\n              (error: any) => this.errorMessage = <any>error\r\n            );\r\n        } else {\r\n          this.productService.updateProduct(p)\r\n            .subscribe(\r\n              () => this.onSaveComplete(),\r\n              (error: any) => this.errorMessage = <any>error\r\n            );\r\n        }\r\n      } else {\r\n        this.onSaveComplete();\r\n      }\r\n    } else {\r\n      this.errorMessage = 'Please correct the validation errors.';\r\n    }\r\n  }\r\n\r\n  onSaveComplete(): void {\r\n    // Reset the form to clear the flags\r\n    this.productForm.reset();\r\n    this.router.navigate(['/products'], { queryParamsHandling: 'preserve' });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ProductEditComponent } from './product-edit.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductEditGuard implements CanDeactivate<ProductEditComponent> {\n  canDeactivate(component: ProductEditComponent): Observable<boolean> | Promise<boolean> | boolean {\n    if (component.productForm.dirty) {\n      const productName = component.productForm.get('productName').value || 'New Product';\n      return confirm(`Navigate away and lose all changes to ${productName}?`);\n    }\n    return true;\n  }\n}\n","module.exports = \"thead {\\n  color: #337AB7;\\n}\\n.row {\\n  padding-bottom: 1.25rem;\\n\\n}\\n@media (max-width: 767px) {\\n  thead {\\n    display: none;\\n  }\\n  tr {\\n    display: flex;\\n    flex-direction: column;\\n    border: 1px solid #DFD7CA;\\n    margin-top: 26px;\\n  }\\n  .imageBlock {\\n    margin: auto;\\n    border-top: none;\\n  }\\n\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0NBQ2hCO0FBQ0Q7RUFDRSx3QkFBd0I7O0NBRXpCO0FBRUQ7RUFDRTtJQUNFLGNBQWM7R0FDZjtFQUNEO0lBQ0UsY0FBYztJQUNkLHVCQUF1QjtJQUN2QiwwQkFBMEI7SUFDMUIsaUJBQWlCO0dBQ2xCO0VBQ0Q7SUFDRSxhQUFhO0lBQ2IsaUJBQWlCO0dBQ2xCOztDQUVGIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0aGVhZCB7XG4gIGNvbG9yOiAjMzM3QUI3O1xufVxuLnJvdyB7XG4gIHBhZGRpbmctYm90dG9tOiAxLjI1cmVtO1xuXG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICB0aGVhZCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICB0ciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNERkQ3Q0E7XG4gICAgbWFyZ2luLXRvcDogMjZweDtcbiAgfVxuICAuaW1hZ2VCbG9jayB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGJvcmRlci10b3A6IG5vbmU7XG4gIH1cblxufVxuXG5cbiJdfQ== */\"","module.exports = \"<!-- <ngx-loading [show]=\\\"loading\\\"></ngx-loading> -->\\n<div class=\\\"card animatedroute\\\">\\n  <div class=\\\"card-header\\\">\\n    {{pageTitle}}\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-2\\\">Filter by:</div>\\n      <div class=\\\"col-md-4\\\">\\n        <input type=\\\"text\\\"\\n               [(ngModel)]=\\\"listFilter\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\"\\n         *ngIf=\\\"listFilter\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <h4>Filtered by: {{listFilter}}</h4>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table mb-0\\\"\\n             *ngIf=\\\"products && products.length\\\">\\n        <thead>\\n          <tr>\\n            <th></th>\\n            <th>Product</th>\\n            <th>Code</th>\\n            <th>Available</th>\\n            <th>Price</th>\\n            <th>5 Star Rating</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let product of filteredProducts\\\">\\n            <td class=\\\"imageBlock\\\">\\n              <img *ngIf=\\\"product.imageUrl\\\"\\n                   [src]=\\\"product.imageUrl\\\"\\n                   [title]=\\\"product.productName\\\"\\n                   [style.width.px]=\\\"imageWidth\\\"\\n                   [style.margin.px]=\\\"imageMargin\\\">\\n            </td>\\n            <td>\\n              <a [routerLink]=\\\"['/products', product.id]\\\"\\n                  [queryParams]=\\\"{filterBy: listFilter}\\\">\\n                {{ product.productName }}\\n              </a>\\n            </td>\\n            <td>{{ product.productCode }}</td>\\n            <td>{{ product.releaseDate }}</td>\\n            <td>{{ product.price | currency:\\\"USD\\\":\\\"symbol\\\":\\\"1.2-2\\\" }}</td>\\n            <td>\\n              <wn-star [rating]=\\\"product.starRating\\\">\\n              </wn-star>\\n            </td>\\n            <td>\\n              <button class=\\\"btn btn-outline-primary btn-sm\\\"\\n                      [routerLink]=\\\"['/products', product.id, 'edit']\\\"\\n                      [queryParams]=\\\"{filterBy: listFilter}\\\">\\n                Edit\\n              </button>\\n         <!-- <button class=\\\"btn btn-outline-primary btn-sm\\\"\\n                [routerLink]=\\\"['/products', product.id, 'edit',\\n                { outlets: { popup: ['summery', product.id]}]\\\"\\n                [queryParams]=\\\"{filterBy: listFilter}\\\">\\n                Edit\\n              </button> -->\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"errorMessage\\\"\\n     class=\\\"alert alert-danger\\\">\\n  Error: {{ errorMessage }}\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Product } from './product';\r\nimport { ProductService } from './product.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n  pageTitle = 'Product List';\r\n  imageWidth = 50;\r\n  imageMargin = 2;\r\n  errorMessage = '';\r\n  loading = false;\r\n\r\n  _listFilter = '';\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this.loading = true;\r\n    this._listFilter = value;\r\n    this.filteredProducts = this.listFilter ? this.performFilter(this.listFilter) : this.products;\r\n    this.loading = false;\r\n  }\r\n\r\n  filteredProducts: Product[] = [];\r\n  products: Product[] = [];\r\n  productss: Product[];\r\n\r\n  constructor(private productService: ProductService, private route: ActivatedRoute) { }\r\n\r\n\r\n  performFilter(filterBy: string): Product[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.products.filter((product: Product) =>\r\n      product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n\r\n    this.products = this.route.snapshot.data['products'];\r\n    this.listFilter = this.route.snapshot.queryParams['filterBy'] || '';\r\n    if (this.listFilter === '') {\r\n      this.filteredProducts = this.products;\r\n    }\r\n\r\n    this.loading = false;\r\n    // this.productService.getProducts().subscribe(\r\n    //   products => {\r\n    //     this.products = products;\r\n    //     this.listFilter = this.route.snapshot.queryParams['filterBy'] || '';\r\n    //     if (this.listFilter === '') {\r\n    //       this.filteredProducts = this.products;\r\n    //     }\r\n\r\n    //     this.loading = false;\r\n    //   },\r\n    //   error => this.errorMessage = <any>error\r\n    // );\r\n\r\n  }\r\n}\r\n","\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of, throwError } from 'rxjs';\n// import { map, catchError } from 'rxjs/operators';\n\nimport { ProductService } from './product.service';\nimport { Product } from './product';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductResolverService implements Resolve<Product> {\n\n  constructor(private productService: ProductService, private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Product> {\n    const id = +route.params['id'];\n    return this.productService.getProduct(id);\n\n    // const id = route.params['id'];\n    // if (isNaN(id)) {\n    //   console.log(`product id is not a number: ${id}`);\n    //   this.router.navigate(['/products']);\n    //   return of(null);\n    // }\n    // return this.productService.getProduct(+id)\n    //   .pipe(map(product => {\n    //     if (product) {\n    //       return product;\n    //     }\n    //     console.log(`product not found: ${id}`);\n    //     this.router.navigate(['/products']);\n    //     return null;\n    //   }))\n    //   .pipe(catchError(error => {\n    //     console.log(`rerieval error: ${error}`);\n    //     this.router.navigate(['/products']);\n    //     return Observable.of(null);\n    //   }));\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductListComponent } from './product-list.component';\r\nimport { ProductDetailComponent } from './product-detail.component';\r\nimport { ProductEditComponent } from './product-edit.component';\r\nimport { ProductEditGuard } from './product-edit.guard';\r\nimport { ProductResolverService } from './product-resolver.service';\r\nimport { ProductsResolverService } from './products-resolver.service';\r\n// import { AuthGuardService } from '../user/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n// {\r\n  // path: 'products',\r\n  // canActivate: [ AuthGuardService ],\r\n  // children: [\r\n    {\r\n      path: '',\r\n      component: ProductListComponent,\r\n      resolve: { products: ProductsResolverService }\r\n    },\r\n    {\r\n      path: ':id',\r\n      component: ProductDetailComponent,\r\n      resolve: { product: ProductResolverService}\r\n    },\r\n    {\r\n      path: ':id/edit',\r\n      canDeactivate: [ProductEditGuard],\r\n      component: ProductEditComponent,\r\n      resolve: { product: ProductResolverService}\r\n    }\r\n//   ]\r\n// }\r\n\r\n\r\n  // { path: 'products', component: ProductListComponent },\r\n  // {\r\n  //   path: 'products/:id',\r\n  //   component: ProductDetailComponent,\r\n  //   resolve: { product: ProductResolverService}\r\n  // },\r\n  // {\r\n  //   path: 'products/:id/edit',\r\n  //   canDeactivate: [ProductEditGuard],\r\n  //   component: ProductEditComponent,\r\n  //   resolve: { product: ProductResolverService}\r\n  // }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductRoutingModule { }\r\n","import { ProductsResolverService } from './products-resolver.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ProductRoutingModule } from './product-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n// import { ProductResolverService } from './product-resolver.service';\r\n\r\nimport {\r\n  ProductListComponent,\r\n  ProductDetailComponent,\r\n  ProductEditComponent,\r\n  ProductResolverService,\r\n  ProductEditGuard\r\n} from './index';\r\n// import { NgxLoadingModule } from 'ngx-loading';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    // NgxLoadingModule.forRoot({}),\r\n    ProductRoutingModule\r\n  ],\r\n  declarations: [\r\n    ProductListComponent,\r\n    ProductDetailComponent,\r\n    ProductEditComponent\r\n  ],\r\n  providers: [ProductResolverService, ProductEditGuard, ProductsResolverService]\r\n})\r\nexport class ProductModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\nimport { Product } from './product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private productsUrl = 'api/products';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.productsUrl)\r\n      .pipe(\r\n        tap(data => console.log(JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getProduct(id: number): Observable<Product> {\r\n    if (id === 0) {\r\n      return of(this.initializeProduct());\r\n    }\r\n    const url = `${this.productsUrl}/${id}`;\r\n    return this.http.get<Product>(url)\r\n      .pipe(\r\n        tap(data => console.log('getProduct: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  createProduct(product: Product): Observable<Product> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    product.id = null;\r\n    return this.http.post<Product>(this.productsUrl, product, { headers: headers })\r\n      .pipe(\r\n        tap(data => console.log('createProduct: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deleteProduct(id: number): Observable<{}> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    const url = `${this.productsUrl}/${id}`;\r\n    return this.http.delete<Product>(url, { headers: headers })\r\n      .pipe(\r\n        tap(data => console.log('deleteProduct: ' + id)),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateProduct(product: Product): Observable<Product> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    const url = `${this.productsUrl}/${product.id}`;\r\n    return this.http.put<Product>(url, product, { headers: headers })\r\n      .pipe(\r\n        tap(() => console.log('updateProduct: ' + product.id)),\r\n        // Return the product on an update\r\n        map(() => product),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(err) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage: string;\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\r\n    }\r\n    console.error(err);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  private initializeProduct(): Product {\r\n    // Return an initialized object\r\n    return {\r\n      id: 0,\r\n      productName: null,\r\n      productCode: null,\r\n      tags: [''],\r\n      releaseDate: null,\r\n      price: null,\r\n      description: null,\r\n      starRating: null,\r\n      imageUrl: null\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of, throwError } from 'rxjs';\n// import { map, catchError } from 'rxjs/operators';\n\nimport { ProductService } from './product.service';\nimport { Product } from './product';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsResolverService implements Resolve<Product[]> {\n\n  constructor(private productService: ProductService, private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Product[]> {\n    return this.productService.getProducts();\n\n    // const id = route.params['id'];\n    // if (isNaN(id)) {\n    //   console.log(`product id is not a number: ${id}`);\n    //   this.router.navigate(['/products']);\n    //   return of(null);\n    // }\n    // return this.productService.getProduct(+id)\n    //   .pipe(map(product => {\n    //     if (product) {\n    //       return product;\n    //     }\n    //     console.log(`product not found: ${id}`);\n    //     this.router.navigate(['/products']);\n    //     return null;\n    //   }))\n    //   .pipe(catchError(error => {\n    //     console.log(`rerieval error: ${error}`);\n    //     this.router.navigate(['/products']);\n    //     return Observable.of(null);\n    //   }));\n  }\n}\n"],"sourceRoot":""}